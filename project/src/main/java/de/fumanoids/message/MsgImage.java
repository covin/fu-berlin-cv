// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_image.proto
package de.fumanoids.message;

public final class MsgImage {
  private MsgImage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum ImageFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    YUV422_IMAGE(0, 1),
    BAYER_IMAGE(1, 2),
    RGB_IMAGE(2, 3),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static ImageFormat valueOf(int value) {
      switch (value) {
        case 1: return YUV422_IMAGE;
        case 2: return BAYER_IMAGE;
        case 3: return RGB_IMAGE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ImageFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ImageFormat>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ImageFormat>() {
            public ImageFormat findValueByNumber(int number) {
              return ImageFormat.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return de.fumanoids.message.MsgImage.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final ImageFormat[] VALUES = {
      YUV422_IMAGE, BAYER_IMAGE, RGB_IMAGE, 
    };
    public static ImageFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private ImageFormat(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      de.fumanoids.message.MsgImage.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:de.fumanoids.message.ImageFormat)
  }
  
  public static final class ImageData extends
      com.google.protobuf.GeneratedMessage {
    // Use ImageData.newBuilder() to construct.
    private ImageData() {
      initFields();
    }
    private ImageData(boolean noInit) {}
    
    private static final ImageData defaultInstance;
    public static ImageData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ImageData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_ImageData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_ImageData_fieldAccessorTable;
    }
    
    // required .de.fumanoids.message.ImageFormat format = 1;
    public static final int FORMAT_FIELD_NUMBER = 1;
    private boolean hasFormat;
    private de.fumanoids.message.MsgImage.ImageFormat format_;
    public boolean hasFormat() { return hasFormat; }
    public de.fumanoids.message.MsgImage.ImageFormat getFormat() { return format_; }
    
    // required bytes data = 2;
    public static final int DATA_FIELD_NUMBER = 2;
    private boolean hasData;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasData() { return hasData; }
    public com.google.protobuf.ByteString getData() { return data_; }
    
    // required bool compressed = 3 [default = false];
    public static final int COMPRESSED_FIELD_NUMBER = 3;
    private boolean hasCompressed;
    private boolean compressed_ = false;
    public boolean hasCompressed() { return hasCompressed; }
    public boolean getCompressed() { return compressed_; }
    
    // required int32 width = 4;
    public static final int WIDTH_FIELD_NUMBER = 4;
    private boolean hasWidth;
    private int width_ = 0;
    public boolean hasWidth() { return hasWidth; }
    public int getWidth() { return width_; }
    
    // required int32 height = 5;
    public static final int HEIGHT_FIELD_NUMBER = 5;
    private boolean hasHeight;
    private int height_ = 0;
    public boolean hasHeight() { return hasHeight; }
    public int getHeight() { return height_; }
    
    private void initFields() {
      format_ = de.fumanoids.message.MsgImage.ImageFormat.YUV422_IMAGE;
    }
    public final boolean isInitialized() {
      if (!hasFormat) return false;
      if (!hasData) return false;
      if (!hasCompressed) return false;
      if (!hasWidth) return false;
      if (!hasHeight) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFormat()) {
        output.writeEnum(1, getFormat().getNumber());
      }
      if (hasData()) {
        output.writeBytes(2, getData());
      }
      if (hasCompressed()) {
        output.writeBool(3, getCompressed());
      }
      if (hasWidth()) {
        output.writeInt32(4, getWidth());
      }
      if (hasHeight()) {
        output.writeInt32(5, getHeight());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFormat()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getFormat().getNumber());
      }
      if (hasData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getData());
      }
      if (hasCompressed()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, getCompressed());
      }
      if (hasWidth()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getWidth());
      }
      if (hasHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getHeight());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.fumanoids.message.MsgImage.ImageData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.ImageData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.fumanoids.message.MsgImage.ImageData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.fumanoids.message.MsgImage.ImageData result;
      
      // Construct using de.fumanoids.message.MsgImage.ImageData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.fumanoids.message.MsgImage.ImageData();
        return builder;
      }
      
      protected de.fumanoids.message.MsgImage.ImageData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.fumanoids.message.MsgImage.ImageData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.fumanoids.message.MsgImage.ImageData.getDescriptor();
      }
      
      public de.fumanoids.message.MsgImage.ImageData getDefaultInstanceForType() {
        return de.fumanoids.message.MsgImage.ImageData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.fumanoids.message.MsgImage.ImageData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.fumanoids.message.MsgImage.ImageData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.fumanoids.message.MsgImage.ImageData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        de.fumanoids.message.MsgImage.ImageData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.fumanoids.message.MsgImage.ImageData) {
          return mergeFrom((de.fumanoids.message.MsgImage.ImageData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.fumanoids.message.MsgImage.ImageData other) {
        if (other == de.fumanoids.message.MsgImage.ImageData.getDefaultInstance()) return this;
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (other.hasCompressed()) {
          setCompressed(other.getCompressed());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              de.fumanoids.message.MsgImage.ImageFormat value = de.fumanoids.message.MsgImage.ImageFormat.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setFormat(value);
              }
              break;
            }
            case 18: {
              setData(input.readBytes());
              break;
            }
            case 24: {
              setCompressed(input.readBool());
              break;
            }
            case 32: {
              setWidth(input.readInt32());
              break;
            }
            case 40: {
              setHeight(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .de.fumanoids.message.ImageFormat format = 1;
      public boolean hasFormat() {
        return result.hasFormat();
      }
      public de.fumanoids.message.MsgImage.ImageFormat getFormat() {
        return result.getFormat();
      }
      public Builder setFormat(de.fumanoids.message.MsgImage.ImageFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFormat = true;
        result.format_ = value;
        return this;
      }
      public Builder clearFormat() {
        result.hasFormat = false;
        result.format_ = de.fumanoids.message.MsgImage.ImageFormat.YUV422_IMAGE;
        return this;
      }
      
      // required bytes data = 2;
      public boolean hasData() {
        return result.hasData();
      }
      public com.google.protobuf.ByteString getData() {
        return result.getData();
      }
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder clearData() {
        result.hasData = false;
        result.data_ = getDefaultInstance().getData();
        return this;
      }
      
      // required bool compressed = 3 [default = false];
      public boolean hasCompressed() {
        return result.hasCompressed();
      }
      public boolean getCompressed() {
        return result.getCompressed();
      }
      public Builder setCompressed(boolean value) {
        result.hasCompressed = true;
        result.compressed_ = value;
        return this;
      }
      public Builder clearCompressed() {
        result.hasCompressed = false;
        result.compressed_ = false;
        return this;
      }
      
      // required int32 width = 4;
      public boolean hasWidth() {
        return result.hasWidth();
      }
      public int getWidth() {
        return result.getWidth();
      }
      public Builder setWidth(int value) {
        result.hasWidth = true;
        result.width_ = value;
        return this;
      }
      public Builder clearWidth() {
        result.hasWidth = false;
        result.width_ = 0;
        return this;
      }
      
      // required int32 height = 5;
      public boolean hasHeight() {
        return result.hasHeight();
      }
      public int getHeight() {
        return result.getHeight();
      }
      public Builder setHeight(int value) {
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder clearHeight() {
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:de.fumanoids.message.ImageData)
    }
    
    static {
      defaultInstance = new ImageData(true);
      de.fumanoids.message.MsgImage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:de.fumanoids.message.ImageData)
  }
  
  public static final class Image extends
      com.google.protobuf.GeneratedMessage {
    // Use Image.newBuilder() to construct.
    private Image() {
      initFields();
    }
    private Image(boolean noInit) {}
    
    private static final Image defaultInstance;
    public static Image getDefaultInstance() {
      return defaultInstance;
    }
    
    public Image getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_Image_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_Image_fieldAccessorTable;
    }
    
    public static final class ImageCenter extends
        com.google.protobuf.GeneratedMessage {
      // Use ImageCenter.newBuilder() to construct.
      private ImageCenter() {
        initFields();
      }
      private ImageCenter(boolean noInit) {}
      
      private static final ImageCenter defaultInstance;
      public static ImageCenter getDefaultInstance() {
        return defaultInstance;
      }
      
      public ImageCenter getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_Image_ImageCenter_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.fumanoids.message.MsgImage.internal_static_de_fumanoids_message_Image_ImageCenter_fieldAccessorTable;
      }
      
      // required int32 x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private boolean hasX;
      private int x_ = 0;
      public boolean hasX() { return hasX; }
      public int getX() { return x_; }
      
      // required int32 y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private boolean hasY;
      private int y_ = 0;
      public boolean hasY() { return hasY; }
      public int getY() { return y_; }
      
      // required int32 r = 3;
      public static final int R_FIELD_NUMBER = 3;
      private boolean hasR;
      private int r_ = 0;
      public boolean hasR() { return hasR; }
      public int getR() { return r_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasR) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasX()) {
          output.writeInt32(1, getX());
        }
        if (hasY()) {
          output.writeInt32(2, getY());
        }
        if (hasR()) {
          output.writeInt32(3, getR());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasX()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, getX());
        }
        if (hasY()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, getY());
        }
        if (hasR()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, getR());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static de.fumanoids.message.MsgImage.Image.ImageCenter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(de.fumanoids.message.MsgImage.Image.ImageCenter prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private de.fumanoids.message.MsgImage.Image.ImageCenter result;
        
        // Construct using de.fumanoids.message.MsgImage.Image.ImageCenter.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new de.fumanoids.message.MsgImage.Image.ImageCenter();
          return builder;
        }
        
        protected de.fumanoids.message.MsgImage.Image.ImageCenter internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new de.fumanoids.message.MsgImage.Image.ImageCenter();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return de.fumanoids.message.MsgImage.Image.ImageCenter.getDescriptor();
        }
        
        public de.fumanoids.message.MsgImage.Image.ImageCenter getDefaultInstanceForType() {
          return de.fumanoids.message.MsgImage.Image.ImageCenter.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public de.fumanoids.message.MsgImage.Image.ImageCenter build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private de.fumanoids.message.MsgImage.Image.ImageCenter buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public de.fumanoids.message.MsgImage.Image.ImageCenter buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          de.fumanoids.message.MsgImage.Image.ImageCenter returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof de.fumanoids.message.MsgImage.Image.ImageCenter) {
            return mergeFrom((de.fumanoids.message.MsgImage.Image.ImageCenter)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(de.fumanoids.message.MsgImage.Image.ImageCenter other) {
          if (other == de.fumanoids.message.MsgImage.Image.ImageCenter.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasR()) {
            setR(other.getR());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 8: {
                setX(input.readInt32());
                break;
              }
              case 16: {
                setY(input.readInt32());
                break;
              }
              case 24: {
                setR(input.readInt32());
                break;
              }
            }
          }
        }
        
        
        // required int32 x = 1;
        public boolean hasX() {
          return result.hasX();
        }
        public int getX() {
          return result.getX();
        }
        public Builder setX(int value) {
          result.hasX = true;
          result.x_ = value;
          return this;
        }
        public Builder clearX() {
          result.hasX = false;
          result.x_ = 0;
          return this;
        }
        
        // required int32 y = 2;
        public boolean hasY() {
          return result.hasY();
        }
        public int getY() {
          return result.getY();
        }
        public Builder setY(int value) {
          result.hasY = true;
          result.y_ = value;
          return this;
        }
        public Builder clearY() {
          result.hasY = false;
          result.y_ = 0;
          return this;
        }
        
        // required int32 r = 3;
        public boolean hasR() {
          return result.hasR();
        }
        public int getR() {
          return result.getR();
        }
        public Builder setR(int value) {
          result.hasR = true;
          result.r_ = value;
          return this;
        }
        public Builder clearR() {
          result.hasR = false;
          result.r_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:de.fumanoids.message.Image.ImageCenter)
      }
      
      static {
        defaultInstance = new ImageCenter(true);
        de.fumanoids.message.MsgImage.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:de.fumanoids.message.Image.ImageCenter)
    }
    
    // optional int32 robotID = 1;
    public static final int ROBOTID_FIELD_NUMBER = 1;
    private boolean hasRobotID;
    private int robotID_ = 0;
    public boolean hasRobotID() { return hasRobotID; }
    public int getRobotID() { return robotID_; }
    
    // optional int64 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private boolean hasTime;
    private long time_ = 0L;
    public boolean hasTime() { return hasTime; }
    public long getTime() { return time_; }
    
    // repeated .de.fumanoids.message.ImageData imageData = 3;
    public static final int IMAGEDATA_FIELD_NUMBER = 3;
    private java.util.List<de.fumanoids.message.MsgImage.ImageData> imageData_ =
      java.util.Collections.emptyList();
    public java.util.List<de.fumanoids.message.MsgImage.ImageData> getImageDataList() {
      return imageData_;
    }
    public int getImageDataCount() { return imageData_.size(); }
    public de.fumanoids.message.MsgImage.ImageData getImageData(int index) {
      return imageData_.get(index);
    }
    
    // optional .de.fumanoids.message.Image.ImageCenter center = 4;
    public static final int CENTER_FIELD_NUMBER = 4;
    private boolean hasCenter;
    private de.fumanoids.message.MsgImage.Image.ImageCenter center_;
    public boolean hasCenter() { return hasCenter; }
    public de.fumanoids.message.MsgImage.Image.ImageCenter getCenter() { return center_; }
    
    // optional int32 pitch = 5;
    public static final int PITCH_FIELD_NUMBER = 5;
    private boolean hasPitch;
    private int pitch_ = 0;
    public boolean hasPitch() { return hasPitch; }
    public int getPitch() { return pitch_; }
    
    // optional int32 roll = 6 [default = -1];
    public static final int ROLL_FIELD_NUMBER = 6;
    private boolean hasRoll;
    private int roll_ = -1;
    public boolean hasRoll() { return hasRoll; }
    public int getRoll() { return roll_; }
    
    // optional int32 headAngle = 7 [default = -1];
    public static final int HEADANGLE_FIELD_NUMBER = 7;
    private boolean hasHeadAngle;
    private int headAngle_ = -1;
    public boolean hasHeadAngle() { return hasHeadAngle; }
    public int getHeadAngle() { return headAngle_; }
    
    // optional int32 eyeHeight = 8 [default = -1];
    public static final int EYEHEIGHT_FIELD_NUMBER = 8;
    private boolean hasEyeHeight;
    private int eyeHeight_ = -1;
    public boolean hasEyeHeight() { return hasEyeHeight; }
    public int getEyeHeight() { return eyeHeight_; }
    
    // optional int32 horizon = 9 [default = -1];
    public static final int HORIZON_FIELD_NUMBER = 9;
    private boolean hasHorizon;
    private int horizon_ = -1;
    public boolean hasHorizon() { return hasHorizon; }
    public int getHorizon() { return horizon_; }
    
    private void initFields() {
      center_ = de.fumanoids.message.MsgImage.Image.ImageCenter.getDefaultInstance();
    }
    public final boolean isInitialized() {
      for (de.fumanoids.message.MsgImage.ImageData element : getImageDataList()) {
        if (!element.isInitialized()) return false;
      }
      if (hasCenter()) {
        if (!getCenter().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRobotID()) {
        output.writeInt32(1, getRobotID());
      }
      if (hasTime()) {
        output.writeInt64(2, getTime());
      }
      for (de.fumanoids.message.MsgImage.ImageData element : getImageDataList()) {
        output.writeMessage(3, element);
      }
      if (hasCenter()) {
        output.writeMessage(4, getCenter());
      }
      if (hasPitch()) {
        output.writeInt32(5, getPitch());
      }
      if (hasRoll()) {
        output.writeInt32(6, getRoll());
      }
      if (hasHeadAngle()) {
        output.writeInt32(7, getHeadAngle());
      }
      if (hasEyeHeight()) {
        output.writeInt32(8, getEyeHeight());
      }
      if (hasHorizon()) {
        output.writeInt32(9, getHorizon());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRobotID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getRobotID());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, getTime());
      }
      for (de.fumanoids.message.MsgImage.ImageData element : getImageDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      if (hasCenter()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getCenter());
      }
      if (hasPitch()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getPitch());
      }
      if (hasRoll()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getRoll());
      }
      if (hasHeadAngle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getHeadAngle());
      }
      if (hasEyeHeight()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, getEyeHeight());
      }
      if (hasHorizon()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getHorizon());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.fumanoids.message.MsgImage.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.fumanoids.message.MsgImage.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.fumanoids.message.MsgImage.Image prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private de.fumanoids.message.MsgImage.Image result;
      
      // Construct using de.fumanoids.message.MsgImage.Image.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new de.fumanoids.message.MsgImage.Image();
        return builder;
      }
      
      protected de.fumanoids.message.MsgImage.Image internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new de.fumanoids.message.MsgImage.Image();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.fumanoids.message.MsgImage.Image.getDescriptor();
      }
      
      public de.fumanoids.message.MsgImage.Image getDefaultInstanceForType() {
        return de.fumanoids.message.MsgImage.Image.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public de.fumanoids.message.MsgImage.Image build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private de.fumanoids.message.MsgImage.Image buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public de.fumanoids.message.MsgImage.Image buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.imageData_ != java.util.Collections.EMPTY_LIST) {
          result.imageData_ =
            java.util.Collections.unmodifiableList(result.imageData_);
        }
        de.fumanoids.message.MsgImage.Image returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.fumanoids.message.MsgImage.Image) {
          return mergeFrom((de.fumanoids.message.MsgImage.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.fumanoids.message.MsgImage.Image other) {
        if (other == de.fumanoids.message.MsgImage.Image.getDefaultInstance()) return this;
        if (other.hasRobotID()) {
          setRobotID(other.getRobotID());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (!other.imageData_.isEmpty()) {
          if (result.imageData_.isEmpty()) {
            result.imageData_ = new java.util.ArrayList<de.fumanoids.message.MsgImage.ImageData>();
          }
          result.imageData_.addAll(other.imageData_);
        }
        if (other.hasCenter()) {
          mergeCenter(other.getCenter());
        }
        if (other.hasPitch()) {
          setPitch(other.getPitch());
        }
        if (other.hasRoll()) {
          setRoll(other.getRoll());
        }
        if (other.hasHeadAngle()) {
          setHeadAngle(other.getHeadAngle());
        }
        if (other.hasEyeHeight()) {
          setEyeHeight(other.getEyeHeight());
        }
        if (other.hasHorizon()) {
          setHorizon(other.getHorizon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRobotID(input.readInt32());
              break;
            }
            case 16: {
              setTime(input.readInt64());
              break;
            }
            case 26: {
              de.fumanoids.message.MsgImage.ImageData.Builder subBuilder = de.fumanoids.message.MsgImage.ImageData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addImageData(subBuilder.buildPartial());
              break;
            }
            case 34: {
              de.fumanoids.message.MsgImage.Image.ImageCenter.Builder subBuilder = de.fumanoids.message.MsgImage.Image.ImageCenter.newBuilder();
              if (hasCenter()) {
                subBuilder.mergeFrom(getCenter());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCenter(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setPitch(input.readInt32());
              break;
            }
            case 48: {
              setRoll(input.readInt32());
              break;
            }
            case 56: {
              setHeadAngle(input.readInt32());
              break;
            }
            case 64: {
              setEyeHeight(input.readInt32());
              break;
            }
            case 72: {
              setHorizon(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 robotID = 1;
      public boolean hasRobotID() {
        return result.hasRobotID();
      }
      public int getRobotID() {
        return result.getRobotID();
      }
      public Builder setRobotID(int value) {
        result.hasRobotID = true;
        result.robotID_ = value;
        return this;
      }
      public Builder clearRobotID() {
        result.hasRobotID = false;
        result.robotID_ = 0;
        return this;
      }
      
      // optional int64 time = 2;
      public boolean hasTime() {
        return result.hasTime();
      }
      public long getTime() {
        return result.getTime();
      }
      public Builder setTime(long value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0L;
        return this;
      }
      
      // repeated .de.fumanoids.message.ImageData imageData = 3;
      public java.util.List<de.fumanoids.message.MsgImage.ImageData> getImageDataList() {
        return java.util.Collections.unmodifiableList(result.imageData_);
      }
      public int getImageDataCount() {
        return result.getImageDataCount();
      }
      public de.fumanoids.message.MsgImage.ImageData getImageData(int index) {
        return result.getImageData(index);
      }
      public Builder setImageData(int index, de.fumanoids.message.MsgImage.ImageData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.imageData_.set(index, value);
        return this;
      }
      public Builder setImageData(int index, de.fumanoids.message.MsgImage.ImageData.Builder builderForValue) {
        result.imageData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addImageData(de.fumanoids.message.MsgImage.ImageData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.imageData_.isEmpty()) {
          result.imageData_ = new java.util.ArrayList<de.fumanoids.message.MsgImage.ImageData>();
        }
        result.imageData_.add(value);
        return this;
      }
      public Builder addImageData(de.fumanoids.message.MsgImage.ImageData.Builder builderForValue) {
        if (result.imageData_.isEmpty()) {
          result.imageData_ = new java.util.ArrayList<de.fumanoids.message.MsgImage.ImageData>();
        }
        result.imageData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllImageData(
          java.lang.Iterable<? extends de.fumanoids.message.MsgImage.ImageData> values) {
        if (result.imageData_.isEmpty()) {
          result.imageData_ = new java.util.ArrayList<de.fumanoids.message.MsgImage.ImageData>();
        }
        super.addAll(values, result.imageData_);
        return this;
      }
      public Builder clearImageData() {
        result.imageData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .de.fumanoids.message.Image.ImageCenter center = 4;
      public boolean hasCenter() {
        return result.hasCenter();
      }
      public de.fumanoids.message.MsgImage.Image.ImageCenter getCenter() {
        return result.getCenter();
      }
      public Builder setCenter(de.fumanoids.message.MsgImage.Image.ImageCenter value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCenter = true;
        result.center_ = value;
        return this;
      }
      public Builder setCenter(de.fumanoids.message.MsgImage.Image.ImageCenter.Builder builderForValue) {
        result.hasCenter = true;
        result.center_ = builderForValue.build();
        return this;
      }
      public Builder mergeCenter(de.fumanoids.message.MsgImage.Image.ImageCenter value) {
        if (result.hasCenter() &&
            result.center_ != de.fumanoids.message.MsgImage.Image.ImageCenter.getDefaultInstance()) {
          result.center_ =
            de.fumanoids.message.MsgImage.Image.ImageCenter.newBuilder(result.center_).mergeFrom(value).buildPartial();
        } else {
          result.center_ = value;
        }
        result.hasCenter = true;
        return this;
      }
      public Builder clearCenter() {
        result.hasCenter = false;
        result.center_ = de.fumanoids.message.MsgImage.Image.ImageCenter.getDefaultInstance();
        return this;
      }
      
      // optional int32 pitch = 5;
      public boolean hasPitch() {
        return result.hasPitch();
      }
      public int getPitch() {
        return result.getPitch();
      }
      public Builder setPitch(int value) {
        result.hasPitch = true;
        result.pitch_ = value;
        return this;
      }
      public Builder clearPitch() {
        result.hasPitch = false;
        result.pitch_ = 0;
        return this;
      }
      
      // optional int32 roll = 6 [default = -1];
      public boolean hasRoll() {
        return result.hasRoll();
      }
      public int getRoll() {
        return result.getRoll();
      }
      public Builder setRoll(int value) {
        result.hasRoll = true;
        result.roll_ = value;
        return this;
      }
      public Builder clearRoll() {
        result.hasRoll = false;
        result.roll_ = -1;
        return this;
      }
      
      // optional int32 headAngle = 7 [default = -1];
      public boolean hasHeadAngle() {
        return result.hasHeadAngle();
      }
      public int getHeadAngle() {
        return result.getHeadAngle();
      }
      public Builder setHeadAngle(int value) {
        result.hasHeadAngle = true;
        result.headAngle_ = value;
        return this;
      }
      public Builder clearHeadAngle() {
        result.hasHeadAngle = false;
        result.headAngle_ = -1;
        return this;
      }
      
      // optional int32 eyeHeight = 8 [default = -1];
      public boolean hasEyeHeight() {
        return result.hasEyeHeight();
      }
      public int getEyeHeight() {
        return result.getEyeHeight();
      }
      public Builder setEyeHeight(int value) {
        result.hasEyeHeight = true;
        result.eyeHeight_ = value;
        return this;
      }
      public Builder clearEyeHeight() {
        result.hasEyeHeight = false;
        result.eyeHeight_ = -1;
        return this;
      }
      
      // optional int32 horizon = 9 [default = -1];
      public boolean hasHorizon() {
        return result.hasHorizon();
      }
      public int getHorizon() {
        return result.getHorizon();
      }
      public Builder setHorizon(int value) {
        result.hasHorizon = true;
        result.horizon_ = value;
        return this;
      }
      public Builder clearHorizon() {
        result.hasHorizon = false;
        result.horizon_ = -1;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:de.fumanoids.message.Image)
    }
    
    static {
      defaultInstance = new Image(true);
      de.fumanoids.message.MsgImage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:de.fumanoids.message.Image)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_fumanoids_message_ImageData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_fumanoids_message_ImageData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_fumanoids_message_Image_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_fumanoids_message_Image_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_fumanoids_message_Image_ImageCenter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_fumanoids_message_Image_ImageCenter_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017msg_image.proto\022\024de.fumanoids.message\"" +
      "\206\001\n\tImageData\0221\n\006format\030\001 \002(\0162!.de.fuman" +
      "oids.message.ImageFormat\022\014\n\004data\030\002 \002(\014\022\031" +
      "\n\ncompressed\030\003 \002(\010:\005false\022\r\n\005width\030\004 \002(\005" +
      "\022\016\n\006height\030\005 \002(\005\"\247\002\n\005Image\022\017\n\007robotID\030\001 " +
      "\001(\005\022\014\n\004time\030\002 \001(\003\0222\n\timageData\030\003 \003(\0132\037.d" +
      "e.fumanoids.message.ImageData\0227\n\006center\030" +
      "\004 \001(\0132\'.de.fumanoids.message.Image.Image" +
      "Center\022\r\n\005pitch\030\005 \001(\005\022\020\n\004roll\030\006 \001(\005:\002-1\022" +
      "\025\n\theadAngle\030\007 \001(\005:\002-1\022\025\n\teyeHeight\030\010 \001(",
      "\005:\002-1\022\023\n\007horizon\030\t \001(\005:\002-1\032.\n\013ImageCente" +
      "r\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030\002 \002(\005\022\t\n\001r\030\003 \002(\005*?\n\013Im" +
      "ageFormat\022\020\n\014YUV422_IMAGE\020\001\022\017\n\013BAYER_IMA" +
      "GE\020\002\022\r\n\tRGB_IMAGE\020\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_de_fumanoids_message_ImageData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_de_fumanoids_message_ImageData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_fumanoids_message_ImageData_descriptor,
              new java.lang.String[] { "Format", "Data", "Compressed", "Width", "Height", },
              de.fumanoids.message.MsgImage.ImageData.class,
              de.fumanoids.message.MsgImage.ImageData.Builder.class);
          internal_static_de_fumanoids_message_Image_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_de_fumanoids_message_Image_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_fumanoids_message_Image_descriptor,
              new java.lang.String[] { "RobotID", "Time", "ImageData", "Center", "Pitch", "Roll", "HeadAngle", "EyeHeight", "Horizon", },
              de.fumanoids.message.MsgImage.Image.class,
              de.fumanoids.message.MsgImage.Image.Builder.class);
          internal_static_de_fumanoids_message_Image_ImageCenter_descriptor =
            internal_static_de_fumanoids_message_Image_descriptor.getNestedTypes().get(0);
          internal_static_de_fumanoids_message_Image_ImageCenter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_fumanoids_message_Image_ImageCenter_descriptor,
              new java.lang.String[] { "X", "Y", "R", },
              de.fumanoids.message.MsgImage.Image.ImageCenter.class,
              de.fumanoids.message.MsgImage.Image.ImageCenter.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
